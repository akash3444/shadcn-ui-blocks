{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "faq-07",
  "type": "registry:block",
  "title": "FAQ 07",
  "description": "A simple FAQ component",
  "dependencies": [
    "lucide-react",
    "radix-ui",
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "accordion"
  ],
  "files": [
    {
      "path": "src/blocks/faq-07/faq-07.tsx",
      "content": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n} from \"@/components/ui/accordion\";\nimport { cn } from \"@/lib/utils\";\nimport { Accordion as AccordionPrimitive } from \"radix-ui\";\nimport { PlusIcon } from \"lucide-react\";\n\nconst faq = [\n  {\n    question: \"What is your return policy?\",\n    answer:\n      \"You can return unused items in their original packaging within 30 days for a refund or exchange. Contact support for assistance.\",\n  },\n  {\n    question: \"How do I track my order?\",\n    answer:\n      \"Track your order using the link provided in your confirmation email, or log into your account to view tracking details.\",\n  },\n  {\n    question: \"Do you ship internationally?\",\n    answer:\n      \"Yes, we ship worldwide. Shipping fees and delivery times vary by location, and customs duties may apply for some countries.\",\n  },\n  {\n    question: \"What payment methods do you accept?\",\n    answer:\n      \"We accept Visa, MasterCard, American Express, PayPal, Apple Pay, and Google Pay, ensuring secure payment options for all customers.\",\n  },\n  {\n    question: \"What if I receive a damaged item?\",\n    answer:\n      \"Please contact our support team within 48 hours of delivery with photos of the damaged item. Weâ€™ll arrange a replacement or refund.\",\n  },\n];\n\nconst FAQ07 = () => {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center px-6 py-12\">\n      <div className=\"w-full max-w-2xl\">\n        <h2 className=\"text-4xl md:text-5xl leading-[1.15]! font-semibold tracking-tighter\">\n          Frequently Asked Questions\n        </h2>\n        <p className=\"mt-2 text-xl text-muted-foreground\">\n          Quick answers to common questions about our products and services.\n        </p>\n\n        <Accordion\n          type=\"single\"\n          collapsible\n          className=\"mt-8 sm:mt-10 space-y-4\"\n          defaultValue=\"question-0\"\n        >\n          {faq.map(({ question, answer }, index) => (\n            <AccordionItem\n              key={question}\n              value={`question-${index}`}\n              className=\"bg-accent py-1 px-4 rounded-xl border-none\"\n            >\n              <AccordionPrimitive.Header className=\"flex\">\n                <AccordionPrimitive.Trigger\n                  className={cn(\n                    \"flex flex-1 items-center justify-between pt-4 pb-3 font-semibold tracking-tight transition-all hover:underline [&[data-state=open]>svg]:rotate-45\",\n                    \"text-start text-lg\"\n                  )}\n                >\n                  {question}\n                  <PlusIcon className=\"h-5 w-5 shrink-0 text-muted-foreground transition-transform duration-200\" />\n                </AccordionPrimitive.Trigger>\n              </AccordionPrimitive.Header>\n              <AccordionContent className=\"text-base text-muted-foreground\">\n                {answer}\n              </AccordionContent>\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </div>\n    </div>\n  );\n};\n\nexport default FAQ07;\n",
      "type": "registry:block",
      "target": "components/faq-07/faq-07.tsx"
    },
    {
      "path": "src/components/ui/accordion.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Accordion as AccordionPrimitive } from \"radix-ui\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"border-b last:border-b-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(\n          \"focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon className=\"text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\nfunction AccordionContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Content>) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm\"\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { config } from \"@/config\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype GroupBy<T, K extends keyof T> = Record<string, T[]>;\n\nexport function groupBy<T, K extends keyof T>(\n  array: T[],\n  key: K\n): GroupBy<T, K> {\n  return array.reduce((acc, item) => {\n    const keyValue = String(item[key]);\n    if (!acc[keyValue]) {\n      acc[keyValue] = [];\n    }\n    acc[keyValue].push(item);\n    return acc;\n  }, {} as GroupBy<T, K>);\n}\n\nexport function absoluteUrl(path: string) {\n  return process.env.NODE_ENV === \"development\"\n    ? `http://localhost:3000${path}`\n    : `https://${config.appUrl}${path}`;\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src/config.ts",
      "content": "export const config = {\n  appUrl:\n    process.env.NODE_ENV === \"production\"\n      ? process.env.VERCEL_PROJECT_PRODUCTION_URL ??\n        process.env.NEXT_PUBLIC_APP_URL!\n      : \"localhost:3000\",\n  social: {\n    github: \"https://github.com/akash3444/shadcn-ui-blocks\",\n    twitter: \"https://twitter.com/shadcnui_blocks\",\n  },\n};\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}