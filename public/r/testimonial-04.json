{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "testimonial-04",
  "type": "registry:block",
  "title": "Testimonial 04",
  "description": "A simple testimonial block",
  "dependencies": [
    "radix-ui",
    "clsx",
    "tailwind-merge",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "avatar",
    "button",
    "https://www.shadcnui-blocks.com/r/marquee.json"
  ],
  "files": [
    {
      "path": "src/blocks/testimonial-04/testimonial-04.tsx",
      "content": "import { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Marquee } from \"@/components/ui/marquee\";\nimport Link from \"next/link\";\nimport React, { ComponentProps } from \"react\";\n\nconst testimonials = [\n  {\n    id: 1,\n    name: \"John Doe\",\n    designation: \"Software Engineer\",\n    company: \"TechCorp\",\n    testimonial:\n      \"This product has completely transformed the way we work. The efficiency and ease of use are unmatched!\",\n    avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n  },\n  {\n    id: 2,\n    name: \"Sophia Lee\",\n    designation: \"Data Analyst\",\n    company: \"InsightTech\",\n    testimonial:\n      \"This tool has saved me hours of work! The analytics and reporting features are incredibly powerful.\",\n    avatar: \"https://randomuser.me/api/portraits/women/6.jpg\",\n  },\n  {\n    id: 3,\n    name: \"Michael Johnson\",\n    designation: \"UX Designer\",\n    company: \"DesignPro\",\n    testimonial:\n      \"An amazing tool that simplifies complex tasks. Highly recommended for professionals in the industry.\",\n    avatar: \"https://randomuser.me/api/portraits/men/3.jpg\",\n  },\n  {\n    id: 4,\n    name: \"Emily Davis\",\n    designation: \"Marketing Specialist\",\n    company: \"BrandBoost\",\n    testimonial:\n      \"I've seen a significant improvement in our team's productivity since we started using this service.\",\n    avatar: \"https://randomuser.me/api/portraits/women/4.jpg\",\n  },\n  {\n    id: 5,\n    name: \"Daniel Martinez\",\n    designation: \"Full-Stack Developer\",\n    company: \"CodeCrafters\",\n    testimonial:\n      \"The best investment we've made! The support team is also super responsive and helpful.\",\n    avatar: \"https://randomuser.me/api/portraits/men/5.jpg\",\n  },\n  {\n    id: 6,\n    name: \"Jane Smith\",\n    designation: \"Product Manager\",\n    company: \"InnovateX\",\n    testimonial:\n      \"The user experience is top-notch! The interface is clean, intuitive, and easy to navigate.\",\n    avatar: \"https://randomuser.me/api/portraits/women/2.jpg\",\n  },\n];\n\nconst Testimonial04 = () => (\n  <div className=\"min-h-screen flex justify-center items-center py-12\">\n    <div className=\"h-full w-full\">\n      <h2 className=\"text-5xl font-semibold text-center tracking-[-0.03em] px-6 text-pretty\">\n        Success Stories\n      </h2>\n      <p className=\"mt-3 text-center text-muted-foreground text-xl\">\n        Real stories from people who use and love our product every day\n      </p>\n      <div className=\"mt-14 relative\">\n        <div className=\"z-10 absolute left-0 inset-y-0 w-[15%] bg-linear-to-r from-background to-transparent\" />\n        <div className=\"z-10 absolute right-0 inset-y-0 w-[15%] bg-linear-to-l from-background to-transparent\" />\n        <Marquee pauseOnHover className=\"[--duration:20s]\">\n          <TestimonialList />\n        </Marquee>\n        <Marquee pauseOnHover reverse className=\"mt-0 [--duration:20s]\">\n          <TestimonialList />\n        </Marquee>\n      </div>\n    </div>\n  </div>\n);\n\nconst TestimonialList = () =>\n  testimonials.map((testimonial) => (\n    <div\n      key={testimonial.id}\n      className=\"min-w-96 max-w-sm bg-accent rounded-xl p-6\"\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Avatar>\n            <AvatarFallback className=\"text-xl font-medium bg-primary text-primary-foreground\">\n              {testimonial.name.charAt(0)}\n            </AvatarFallback>\n          </Avatar>\n          <div>\n            <p className=\"text-lg font-semibold\">{testimonial.name}</p>\n            <p className=\"text-sm text-gray-500\">{testimonial.designation}</p>\n          </div>\n        </div>\n        <Button variant=\"ghost\" size=\"icon\" asChild>\n          <Link href=\"#\" target=\"_blank\">\n            <TwitterLogo className=\"w-4 h-4\" />\n          </Link>\n        </Button>\n      </div>\n      <p className=\"mt-5 text-[17px]\">{testimonial.testimonial}</p>\n    </div>\n  ));\n\nconst TwitterLogo = (props: ComponentProps<\"svg\">) => (\n  <svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <title>X</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z\"\n    />\n  </svg>\n);\n\nexport default Testimonial04;\n",
      "type": "registry:block",
      "target": "components/testimonial-04/testimonial-04.tsx"
    },
    {
      "path": "src/components/ui/avatar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Avatar as AvatarPrimitive } from \"radix-ui\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/components/ui/button.tsx",
      "content": "import * as React from \"react\"\nimport { Slot as SlotPrimitive } from \"radix-ui\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? SlotPrimitive.Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/components/ui/marquee.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { ComponentPropsWithoutRef } from \"react\";\n\ninterface MarqueeProps extends ComponentPropsWithoutRef<\"div\"> {\n  /**\n   * Optional CSS class name to apply custom styles\n   */\n  className?: string;\n  /**\n   * Whether to reverse the animation direction\n   * @default false\n   */\n  reverse?: boolean;\n  /**\n   * Whether to pause the animation on hover\n   * @default false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * Content to be displayed in the marquee\n   */\n  children: React.ReactNode;\n  /**\n   * Whether to animate vertically instead of horizontally\n   * @default false\n   */\n  vertical?: boolean;\n  /**\n   * Number of times to repeat the content\n   * @default 4\n   */\n  repeat?: number;\n}\n\nexport function Marquee({\n  className,\n  reverse = false,\n  pauseOnHover = false,\n  children,\n  vertical = false,\n  repeat = 4,\n  ...props\n}: MarqueeProps) {\n  return (\n    <div\n      {...props}\n      className={cn(\n        \"group flex overflow-hidden p-2 [--duration:40s] [--gap:1rem] [gap:var(--gap)]\",\n        {\n          \"flex-row\": !vertical,\n          \"flex-col\": vertical,\n        },\n        className\n      )}\n    >\n      {Array(repeat)\n        .fill(0)\n        .map((_, i) => (\n          <div\n            key={i}\n            className={cn(\"flex shrink-0 justify-around [gap:var(--gap)]\", {\n              \"animate-marquee flex-row\": !vertical,\n              \"animate-marquee-vertical flex-col\": vertical,\n              \"group-hover:[animation-play-state:paused]\": pauseOnHover,\n              \"[animation-direction:reverse]\": reverse,\n            })}\n          >\n            {children}\n          </div>\n        ))}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { config } from \"@/config\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype GroupBy<T, K extends keyof T> = Record<string, T[]>;\n\nexport function groupBy<T, K extends keyof T>(\n  array: T[],\n  key: K\n): GroupBy<T, K> {\n  return array.reduce((acc, item) => {\n    const keyValue = String(item[key]);\n    if (!acc[keyValue]) {\n      acc[keyValue] = [];\n    }\n    acc[keyValue].push(item);\n    return acc;\n  }, {} as GroupBy<T, K>);\n}\n\nexport function absoluteUrl(path: string) {\n  return process.env.NODE_ENV === \"development\"\n    ? `http://localhost:3000${path}`\n    : `https://${config.appUrl}${path}`;\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src/config.ts",
      "content": "export const config = {\n  appUrl:\n    process.env.NODE_ENV === \"production\"\n      ? process.env.VERCEL_PROJECT_PRODUCTION_URL ??\n        process.env.NEXT_PUBLIC_APP_URL!\n      : \"localhost:3000\",\n  social: {\n    github: \"https://github.com/akash3444/shadcn-ui-blocks\",\n    twitter: \"https://twitter.com/shadcnui_blocks\",\n  },\n};\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}