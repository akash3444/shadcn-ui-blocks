{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "features-05",
  "type": "registry:block",
  "title": "Features 05",
  "description": "A simple features block",
  "dependencies": [
    "lucide-react",
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "card"
  ],
  "files": [
    {
      "path": "src/blocks/features-05/features-05.tsx",
      "content": "import { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport {\n  BookCheck,\n  ChartPie,\n  FolderSync,\n  Goal,\n  Users,\n  Zap,\n} from \"lucide-react\";\n\nconst features = [\n  {\n    icon: Goal,\n    title: \"Identify Opportunities\",\n    description:\n      \"Easily uncover untapped areas to explore and expand your reach effortlessly.\",\n  },\n  {\n    icon: BookCheck,\n    title: \"Build Authority\",\n    description:\n      \"Create valuable content that resonates, inspires trust, and positions you as an expert.\",\n  },\n  {\n    icon: ChartPie,\n    title: \"Instant Insights\",\n    description:\n      \"Gain immediate, actionable insights with a quick glance, enabling fast decision-making.\",\n  },\n  {\n    icon: Users,\n    title: \"Engage with Your Audience\",\n    description:\n      \"Boost audience engagement with interactive features like polls, quizzes, and forms.\",\n  },\n  {\n    icon: FolderSync,\n    title: \"Automate Your Workflow\",\n    description:\n      \"Streamline your processes by automating repetitive tasks, saving time and reducing effort.\",\n  },\n  {\n    icon: Zap,\n    title: \"Accelerate Growth\",\n    description:\n      \"Supercharge your growth by implementing strategies that drive results quickly and efficiently.\",\n  },\n];\n\nconst Features05Page = () => {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"max-w-(--breakpoint-lg) w-full py-10 px-6\">\n        <h2 className=\"text-4xl md:text-[2.5rem] md:leading-[1.2] font-semibold tracking-[-0.03em] sm:max-w-xl text-pretty\">\n          Strengthen Your Strategy\n        </h2>\n        <p className=\"mt-2 text-muted-foreground text-lg sm:text-xl\">\n          Enhance your strategy with intelligent tools designed for success.\n        </p>\n        <div className=\"mt-10 w-full mx-auto grid md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-8\">\n          {features.map((feature) => (\n            <Card\n              key={feature.title}\n              className=\"flex flex-col border rounded-xl overflow-hidden shadow-none pb-0\"\n            >\n              <CardHeader>\n                <feature.icon />\n                <h4 className=\"mt-3! text-xl font-semibold tracking-tight\">\n                  {feature.title}\n                </h4>\n                <p className=\"mt-1 text-muted-foreground text-[17px]\">\n                  {feature.description}\n                </p>\n              </CardHeader>\n              <CardContent className=\"mt-auto px-0 pb-0\">\n                <div className=\"bg-muted h-40 ml-6 rounded-tl-xl\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Features05Page;\n",
      "type": "registry:block",
      "target": "components/features-05/features-05.tsx"
    },
    {
      "path": "src/components/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { config } from \"@/config\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype GroupBy<T, K extends keyof T> = Record<string, T[]>;\n\nexport function groupBy<T, K extends keyof T>(\n  array: T[],\n  key: K\n): GroupBy<T, K> {\n  return array.reduce((acc, item) => {\n    const keyValue = String(item[key]);\n    if (!acc[keyValue]) {\n      acc[keyValue] = [];\n    }\n    acc[keyValue].push(item);\n    return acc;\n  }, {} as GroupBy<T, K>);\n}\n\nexport function absoluteUrl(path: string) {\n  return process.env.NODE_ENV === \"development\"\n    ? `http://localhost:3000${path}`\n    : `https://${config.appUrl}${path}`;\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src/config.ts",
      "content": "export const config = {\n  appUrl:\n    process.env.NODE_ENV === \"production\"\n      ? process.env.VERCEL_PROJECT_PRODUCTION_URL ??\n        process.env.NEXT_PUBLIC_APP_URL!\n      : \"localhost:3000\",\n  social: {\n    github: \"https://github.com/akash3444/shadcn-ui-blocks\",\n    twitter: \"https://twitter.com/shadcnui_blocks\",\n  },\n};\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}